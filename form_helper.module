<?php

function _form_helper_get_options_from_vocabulary($vid) {
  $terms = taxonomy_get_tree($vid);
  $options = array();

  foreach ($terms as $term) {
    $options[$term->tid] = $term->name;
  }

  return $options;
}

function form_helper_menu() {
  $items = array();

  $items['admin/settings/form-helper'] = array(
      'title' => 'Form Helper Module Settings',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('form_helper_admin_settings_form'),
      'access arguments' => array('administer site configuration'),
  );

  return $items;
}

function form_helper_admin_settings_form() {
  $form = array();

  $form['form_helper_use_placeholder'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use placeholder attribute rather than title on form textfields'),
      '#default_value' => variable_get('form_helper_use_placeholder', FALSE),
  );

  return system_settings_form($form);
}

function form_helper_fieldset($title, $collapsible = FALSE, $collapsed = FALSE, $tree = FALSE) {
  return array(
      '#type' => 'fieldset',
      '#title' => $title,
      '#collapsible' => $collapsible,
      '#collapsed' => $collapsed,
      '#tree' => $tree,
  );
}

function form_helper_textfield($title, $default_value = NULL, $required = FALSE, $size = 30) {
  $item = array(
      '#type' => 'textfield',
      '#default_value' => $default_value,
      '#size' => $size,
      '#required' => $required,
  );

  if (variable_get('form_helper_use_placeholder', FALSE)) {
    $item['#attributes'] = array('placeholder' => $title);
  }
  else {
    $item['#title'] = $title;
  }

  return $item;
}

function form_helper_textarea($title, $default_value = NULL, $required = FALSE, $rows = 5, $cols = 30, $resizeable = TRUE) {
  return array(
      '#type' => 'textarea',
      '#title' => $title,
      '#default_value' => $default_value,
      '#rows' => $rows,
      '#cols' => $cols,
      '#resizeable' => $resizeable,
      '#required' => $required,
  );
}

function form_helper_select($title, $options = array(), $default_value = NULL, $required = FALSE, $allow_multiple = FALSE) {
  return array(
      '#type' => 'select',
      '#title' => $title,
      '#options' => $options,
      '#default_value' => $default_value,
      '#required' => $required,
      '#multiple' => $allow_multiple,
  );
}

function form_helper_radios($title, $options = array(), $default_value = NULL, $required = FALSE) {
  return array(
      '#type' => 'radios',
      '#title' => $title,
      '#options' => $options,
      '#default_value' => $default_value,
      '#required' => $required,
  );
}

function form_helper_checkboxes($title, $options = array(), $default_value = NULL, $required = FALSE) {
  return array(
      '#type' => 'checkboxes',
      '#title' => $title,
      '#options' => $options,
      '#default_value' => $default_value,
      '#required' => $required,
  );
}

function form_helper_checkbox($title, $default_value = NULL, $required = FALSE) {
  return array(
      '#type' => 'checkbox',
      '#title' => $title,
      '#default_value' => $default_value,
      '#required' => $required,
  );
}

function form_helper_select_from_vocabulary($title, $vid, $default_value = NULL, $required = FALSE, $allow_multiple = FALSE) {
  $options = _form_helper_get_options_from_vocabulary($vid);
  return form_helper_select($title, $options, $default_value, $required, $allow_multiple);
}

function form_helper_radios_from_vocabulary($title, $vid, $default_value = NULL, $required = FALSE) {
  $options = _form_helper_get_options_from_vocabulary($vid);
  return form_helper_radios($title, $options, $default_value, $required);
}

function form_helper_checkboxes_from_vocabulary($title, $vid, $default_value = NULL, $required = FALSE) {
  $options = _form_helper_get_options_from_vocabulary($vid);
  return form_helper_checkboxes($title, $options, $default_value, $required);
}